pipeline {
    agent any

    environment {
        // Set your project name and Docker image names here
        PROJECT_NAME = 'CodeForU'
        DJANGO_IMAGE_NAME = 'mohamadaj/bs-pmc-2024-team14-web:latest'
        MONGO_IMAGE_NAME = 'mohamadaj/mongo:latest'
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }

    stages {
        stage('Clone repository') {
            steps {
                // Replace with your GitHub repository URL
                git 'https://github.com/BS-PMC-2024/BS-PMC-2024-Team14.git'
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Adjust Dockerfile paths if needed
                    docker.build("${env.DJANGO_IMAGE_NAME}", '-f dockerfile .')
                    docker.build("${env.MONGO_IMAGE_NAME}", '-f dockerfile .')
                }
            }
        }

        stage('Run Docker Compose') {
            steps {
                script {
                    sh "docker-compose -f ${env.DOCKER_COMPOSE_FILE} up -d"
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Adjust container name and test command as necessary
                    sh "docker-compose -f ${env.DOCKER_COMPOSE_FILE} exec bs-pmc-2024-team14 python manage.py test"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Define your deployment steps here, e.g., re-deploy with production settings
                    // This could include another docker-compose command or other deployment steps
                }
            }
        }
    }

    post {
        always {
            script {
                sh "docker-compose -f ${env.DOCKER_COMPOSE_FILE} down"
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}